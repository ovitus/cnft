#!/bin/bash
#
# Transaction environment:
#
# account addresses, public key hashes, signing keys
# protocol parameters 
# CNFTMintingPolicy.id
# CNFTValidator.addr
# refscript.addr
# metadata
# ASCII art

path="$HOME/.local/bin"

keys="nami-keys"
network="preview"

cardano-cli version 1>/dev/null || exit

[[ $network == "mainnet" ]] && net="mainnet"
[[ $network == "preprod" ]] && net="testnet-magic 1"
[[ $network == "preview" ]] && net="testnet-magic 2" || { echo "Network must be either mainnet, preprod or preview"; exit; }

cd ../assets

[[ -d $keys ]] || { echo "$keys do not exist"; exit; }

acct0_addr=$(cat "$keys/$network/0/payment/payment.addr")
acct0_pkh=$(cat "$keys/$network/0/payment/payment.pkh")
acct0_skey="$keys/$network/0/payment/payment.skey"

acct1_addr=$(cat "$keys/$network/1/payment/payment.addr")
acct1_pkh=$(cat "$keys/$network/1/payment/payment.pkh")
acct1_skey="$keys/$network/1/payment/payment.skey"

acct2_addr=$(cat "$keys/$network/2/payment/payment.addr")
acct2_pkh=$(cat "$keys/$network/2/payment/payment.pkh")
acct2_skey="$keys/$network/2/payment/payment.skey"

[[ $(basename $0) == "query-utxos.sh" ]] && ! [[ -f CNFTValidator.plutus ]] && return

[[ -f CNFTMintingPolicy.plutus ]] || { echo "CNFTMintingPolicy.plutus does not exist"; exit; }
cardano-cli transaction policyid \
  --script-file CNFTMintingPolicy.plutus > CNFTMintingPolicy.id

[[ -f CNFTValidator.plutus ]] || { echo "CNFTValidator.plutus does not exist"; exit; }
cardano-cli address build \
  --payment-script-file CNFTValidator.plutus \
  --$net \
  --out-file CNFTValidator.addr

cnftvalidator_addr=$(cat CNFTValidator.addr)

if ! [[ -f refscript.addr ]]; then
  cardano-cli address key-gen \
    --verification-key-file payment.vkey \
    --signing-key-file payment.skey

  cardano-cli stake-address key-gen \
    --verification-key-file stake.vkey \
    --signing-key-file stake.skey

  cardano-cli address build \
    --payment-verification-key-file payment.vkey \
    --stake-verification-key-file stake.vkey \
    --$net \
    --out-file refscript.addr

  rm -f payment.vkey payment.skey stake.vkey stake.skey
fi

refscript_addr=$(cat refscript.addr)

# escape special characters
cat > metadata.json << EOT
{ "721": 
  { "$(cat CNFTMintingPolicy.id)": 
    { "Bicycle\n   __o\n _ \\\<_\n(_)/(_)":
      { "image": "ipfs://QmZWBiDiEjjDbk1sBK1qyNWtB5tPziMUBZQCRZ9bphc6V2"
      }
    , "Pikachu\n(\\\__/)\n(o^.^)\nz(_(\")(\")":
      { "image": "ipfs://QmZx7wo8XchVeRnhf7QvMgxuUvZ1s8UBtoW13vpCuBredz"
      }
    }
  }
}
EOT

rm -f *.ascii

cat << 'EOT' > bicycle.ascii
Bicycle
   __o
 _ \<_
(_)/(_)
EOT

cat << 'EOT' > pikachu.ascii
Pikachu
(\__/)
(o^.^)
z(_(")(")
EOT
